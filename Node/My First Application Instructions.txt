My First Application Instructions:
	The first step to this was the setup instructions, check that document out and this continues where it left off.

	Create a view page and use EJS to deliver the content.
		I created a new folder and named it Node, then added a folder MyFirstApp and added a views folder
		I created a new file and called it firstApp.js and put it in the MyFirstApp folder.
			var express = require('express');

			var app = express();

			app.get('/jode', function(req, res) {
				res.render('jode.ejs');
			});

			app.listen(8080);		
		This will look for the view "jode", which has to be in the view folder and named jode.ejs:
			<!DOCTYPE html>

			<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
			<head>
				<meta charset="utf-8" />
				<title>Jode Application</title>

				<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
				<script src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>
				<script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
				<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>
			</head>
			<body>
				<div class="class="container-fluid">
					<div class="row">
						<div class="col">
							One
						</div>
						<div class="col">
							Two
						</div>
						<div class="col">
							Three
						</div>
						<div class="col">
							Four
						</div>
						<div class="col">
							Give
						</div>
						<div class="col">
							Six
						</div>
					</div>
					<div class="row">
						<div class="col-10">
							Here is my main content!
						</div>
						<div class="col-2">
							Sidebar!
						</div>
					</div>

				</div>
				
			</body>
			</html>		
		Now I close any previous running node in the console (control + 'C') and run the application:
			C:\Users\mrtes\Node\Applications\FirstApp>node firstApp.js
		Open the web browser and try getting to the page:  http://localhost:8080/jode
	
	Configure visual studio to edit the *.ejs folders
		Tools + Options + Text Editor + File Extension:
			Extension: ejs, Editor: HTML Editor
			
	Return partial content and put it into a page.
		So first I made the file with my partial view content, I called it GroupingContent.ejs
			<div class="groupingContent">
				Here is my replaced content!
			</div>
			
		Now I update my node script to handle the new url, I addedthe line after the other get:
			app.get('/jode/GroupingContent', function(req, res) {
				res.render('GroupingContent.ejs');
			});		
			
		I tested this out by stopping any active node scripts, and restarting.  Then going to the url:
			http://localhost:8080/jode/GroupingContent
			It is unstyled at this point, but that's okay.
	
		Now I added the style, script, and other areas to my may page, jode.html 
			<!DOCTYPE html>

			<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
			<head>
				<meta charset="utf-8" />
				<title>Jode Application</title>

				<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css" integrity="sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ" crossorigin="anonymous">
				<script src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>
				<script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js" integrity="sha384-DztdAPBWPRXSA/3eYEEUWrWCy7G5KFbe8fFjk5JAIxUYHKkDx6Qin1DkWx51bBrb" crossorigin="anonymous"></script>
				<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js" integrity="sha384-vBWWzlZJ8ea9aCX4pEW3rVHjgjt7zpkNpZk+02D9phzyeVkE+jo0ieGizqPLForn" crossorigin="anonymous"></script>

				<script src="http://code.jquery.com/jquery-3.3.1.min.js"
						integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
						crossorigin="anonymous"></script>

				<style type="text/css">
					div.groupingContent {
						background-color:aqua;
						padding: 2em;
						color:darkgreen;
						font-weight: bold;
					}
				</style>

				<script type="text/javascript">
					$(document).ready(function () {
						$("div#TestContent").text('Replaced the text!');

						getContent();
					});

					function getContent() {
						var response = '';
						$.ajax({
							type: "GET",
							url: "http://localhost:8080/jode/GroupingContent",
							async: false,
							success: function (text) {
								response = text;
							}
						});

						$("div#TestContent").html(response);
					};
				</script>
			</head>
			<body>
				<div class="class="container-fluid">
					<div class="row">
						<div class="col">
							One
						</div>
						<div class="col">
							Two
						</div>
						<div class="col">
							Three
						</div>
						<div class="col">
							Four
						</div>
						<div class="col">
							Give
						</div>
						<div class="col">
							Six
						</div>
					</div>
					<div class="row">
						<div class="col-10">
							Here is my main content!
							<div class="row">
								<div id="TestContent" class="col-6">
									Left side, Initial Text!
								</div>
								<div class="col=6">
									Right Side
								</div>
							</div>
						</div>
						<div class="col-2">
							Sidebar!
						</div>
					</div>

				</div>
				
			</body>
			</html>			
		
		Now that I have the ajax call it should load the content on the page after the main page loads.
		To test it out, go to the url:
			http://localhost:8080/jode
			
		From here we can add just about anything we want to the front end and load it as needed.
		
		Todo:  How will we do database connections?!  
		I love the idea of using google sheets for individual users data:  https://developers.google.com/sheets/api/quickstart/nodejs
		We can also use google as the log in:  https://cloud.google.com/nodejs/getting-started/authenticate-users
		
		To deliver static images, install path.
			npm install path
			
		
		
		
		
	
	
	
	
	
	
	
	